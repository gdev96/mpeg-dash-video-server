apiVersion: v1
kind: Service
metadata:
  name: frontend
spec:
  ports:
    - port: 80
  selector:
    app: frontend
---
apiVersion: v1
kind: Service
metadata:
  name: video-management
spec:
  ports:
    - port: 8080
  selector:
    app: video-management
---
apiVersion: v1
kind: Service
metadata:
  name: app-db
spec:
  ports:
    - port: 3306
  selector:
    app: app-db
---
apiVersion: v1
kind: Service
metadata:
  name: video-processing
spec:
  ports:
    - port: 5000
  selector:
    app: video-processing
---
apiVersion: v1
kind: Service
metadata:
  name: log-db
spec:
  ports:
    - port: 3306
  selector:
    app: log-db
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: api-gateway
  annotations:
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-methods: "PUT, GET, POST, OPTIONS, DELETE"
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
    nginx.ingress.kubernetes.io/cors-allow-headers: "Content-Type"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "1800" # max response timeout = 30 minutes
    nginx.ingress.kubernetes.io/proxy-body-size: "1024m" # max upload body size = 1 gigabyte
    nginx.ingress.kubernetes.io/configuration-snippet: |
      proxy_set_header X-REQUEST-ID $msec;
    nginx.ingress.kubernetes.io/rewrite-target: "/$2"
spec:
  rules:
  - host: video-server.localhost
    http:
      paths:
      - path: /vms(/|$)(.*)
        backend:
          serviceName: video-management
          servicePort: 8080
      - path: /()(.*)
        backend:
          serviceName: frontend
          servicePort: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
spec:
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
      - name: frontend
        image: frontend:1.0.0
        ports:
          - containerPort: 80
        volumeMounts:
          - mountPath: /webapp
            name: code-volume
          - mountPath: /var/videofiles
            name: storage
      volumes:
      - name: code-volume
        hostPath:
          path: /frontend
          type: Directory
      - name: storage
        hostPath:
          path: /storage-volume
          type: DirectoryOrCreate
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: video-management
spec:
  selector:
    matchLabels:
      app: video-management
  template:
    metadata:
      labels:
        app: video-management
    spec:
      containers:
      - name: video-management
        image: video-management-service:2.0.0
        envFrom:
          - configMapRef:
              name: video-management-env
          - secretRef:
              name: video-management-secret
        ports:
          - containerPort: 8080
        volumeMounts:
          - mountPath: /var/video
            name: storage
      volumes:
      - name: storage
        hostPath:
          path: /storage-volume
          type: DirectoryOrCreate
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app-db
spec:
  selector:
    matchLabels:
      app: app-db
  template:
    metadata:
      labels:
        app: app-db
    spec:
      containers:
      - name: app-db
        image: mysql:8
        envFrom:
          - configMapRef:
              name: app-db-env
          - secretRef:
              name: app-db-secret
        ports:
          - containerPort: 3306
        volumeMounts:
          - mountPath: /var/lib/mysql
            name: app-db-data
      volumes:
      - name: app-db-data
        hostPath:
          path: /app-db-volume
          type: DirectoryOrCreate
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: video-processing
spec:
  selector:
    matchLabels:
      app: video-processing
  template:
    metadata:
      labels:
        app: video-processing
    spec:
      containers:
      - name: video-processing
        image: video-processing-service:2.0.0
        envFrom:
          - configMapRef:
              name: video-processing-env
          - secretRef:
              name: video-processing-secret
        ports:
          - containerPort: 5000
        volumeMounts:
          - mountPath: /app
            name: code-volume
          - mountPath: /var/video
            name: storage
          - mountPath: /var/videofiles
            name: storage
      volumes:
      - name: code-volume
        hostPath:
          path: /video-processing
          type: Directory
      - name: storage
        hostPath:
          path: /storage-volume
          type: DirectoryOrCreate
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: log-db
spec:
  selector:
    matchLabels:
      app: log-db
  template:
    metadata:
      labels:
        app: log-db
    spec:
      containers:
      - name: log-db
        image: mysql:8
        envFrom:
          - configMapRef:
              name: log-db-env
          - secretRef:
              name: log-db-secret
        ports:
          - containerPort: 3306
        volumeMounts:
          - mountPath: /var/lib/mysql
            name: log-db-data
      volumes:
      - name: log-db-data
        hostPath:
          path: /log-db-volume
          type: DirectoryOrCreate
